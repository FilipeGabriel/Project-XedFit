package com.homework.sbwork.resources;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.homework.sbwork.entities.User;
import com.homework.sbwork.services.UserService;

@RestController
@RequestMapping(value = "/users")
public class UserResource {
	
	@Autowired
	private UserService userService;
	
	@GetMapping
	public ResponseEntity<List<User>> findAll(){
		List<User> list = userService.finAll();
		return ResponseEntity.ok().body(list);
	}
	
	@GetMapping(value = "/{id}")
	public ResponseEntity<User> findById(@PathVariable Long id) {
		User obj = userService.findById(id);
		return ResponseEntity.ok().body(obj);
	}
	
	@PostMapping			//	\/ Inserção do novo recurso
	public ResponseEntity<User> insert(@RequestBody User obj){ 			// @RequestBody informa que o objeto obj vai chegar no modo json quando fizer a requisição...
		obj = userService.insert(obj);									// ...e esse json vai ser descerializado para o objeto User 
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(obj.getId()).toUri();				//Gera o endereço URI para retornar o código 201 Created no ResponseEntity.created(...);
		return ResponseEntity.created(uri).body(obj);				//Retorna a resposta 201 Created(código especifico do http, significa que criou um novo recurso). É esperado que a resposta contenha um cabeçalho(location) contendo o endereço do novo recuso que foi inserido;
	}
	
	@DeleteMapping(value = "/{id}")
	public ResponseEntity<Void> delete(@PathVariable Long id) {
		userService.delete(id);
		return ResponseEntity.noContent().build();				//Restorna uma resposta vazia com o código 204 (código http de resposta sem conteúdo)
	}
	
	@PutMapping(value = "/{id}")
	public ResponseEntity<User> update(@PathVariable Long id, @RequestBody User obj){
		obj = userService.update(id, obj);
		return ResponseEntity.ok().body(obj);
	}
}
